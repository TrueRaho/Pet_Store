// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String      @id @default(uuid())
  name        String
  price       Int
  category    String
  description String
  rating      Float
  image       String
  reviews     Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  pet         String
  brand       String
  orderItems  OrderItem[]
}

model User {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  phone     String?
  address   String?
  city      String?
  zipCode   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id        String      @id @default(uuid())
  userId    String
  user      User        @relation(fields: [userId], references: [id])
  items     OrderItem[]
  status    String      @default("processing")
  total     Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  address   String?
  city      String?
  phone     String?
  notes     String?
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  name      String
  price     Int
  quantity  Int
  image     String?
  createdAt DateTime @default(now())
}
